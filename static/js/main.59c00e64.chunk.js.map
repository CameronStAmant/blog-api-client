{"version":3,"sources":["components/Header.js","components/Footer.js","components/Layout.js","components/Home.js","App.js","components/Login.js","components/Logout.js","components/SignUp.js","components/CommentForm.js","components/Comments.js","components/PostDetails.js","Routes.js","index.js"],"names":["Header","props","className","to","authState","Footer","Layout","children","Home","useState","posts","setPosts","useEffect","a","fetch","mode","response","json","data","item","listPosts","map","post","published","id","title","fetchPosts","App","Login","username","setUsername","password","setPassword","redirect","setRedirect","errorMessage","setErrorMessage","push","onSubmit","e","preventDefault","requestOptions","method","headers","body","JSON","stringify","adminSite","then","results","undefined","token","window","localStorage","setItem","authRefresh","message","htmlFor","type","name","autoComplete","value","onChange","target","required","Logout","removeItem","SignUp","email","setEmail","confirmPassword","setConfirmPassword","history","useHistory","CommentForm","setBody","useParams","handleSubmit","Authorization","getItem","author","userId","setComments","loadComments","comments","rows","DateTime","require","Comments","postid","array","comment","element","fromISO","timestamp","toLocaleString","DATETIME_MED","_id","fetchComments","PostDetails","postDetails","setPostDetails","setLoadComments","fetchPostDetails","state","Routes","auth","setAuth","setUserId","refresh","setRefresh","authChecker","forceRefresh","exact","path","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59c00e64.chunk.js","sourcesContent":["import './Header.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n  return (\n    <div className=\"header\">\n      <ul className=\"headerNav\">\n        <li>\n          <NavLink to=\"/\">Home</NavLink>\n        </li>\n        {!props.authState && (\n          <li>\n            <NavLink to=\"/login\">Login</NavLink>\n          </li>\n        )}\n        {!props.authState && (\n          <li>\n            <NavLink to=\"/signup\">Sign up</NavLink>\n          </li>\n        )}\n        {props.authState && (\n          <li>\n            <NavLink to=\"/logout\">Log out</NavLink>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Header;\n","import './Footer.css';\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <ul className=\"footerNav\">\n        <li>Privacy</li>\n        <li>About</li>\n        <li>Contact us</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Footer;\n","import Header from './Header';\nimport Footer from './Footer';\nimport './Layout.css';\n\nconst Layout = (props) => {\n  return (\n    <div className=\"App\">\n      <Header authState={props.authState} />\n      {props.children}\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Home.css';\nimport Layout from './Layout';\n\nconst Home = (props) => {\n  const [posts, setPosts] = useState(null);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const response = await fetch(\n        'https://serene-waters-04286.herokuapp.com/posts',\n        {\n          mode: 'cors',\n        }\n      );\n      const data = await response.json();\n      const item = data.posts;\n      const listPosts = item.map((post) => {\n        if (post.published === true) {\n          return (\n            <li key={post.title} className=\"postDetails\">\n              <Link to={'/posts/' + post.id}>{post.title}</Link>\n            </li>\n          );\n        } else {\n          return null;\n        }\n      });\n      setPosts(listPosts);\n    };\n    fetchPosts();\n  }, []);\n\n  return (\n    <Layout authState={props.authState}>\n      <div className=\"mainContentHome\">\n        <div className=\"homeBanner\">Welcome to the blog!</div>\n        <ul className=\"postIndex\">{posts ? posts : ''}</ul>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Home;\n","import './App.css';\nimport Home from './components/Home';\n\nfunction App(props) {\n  return (\n    <div>\n      <Home authState={props.authState} />\n    </div>\n  );\n}\n\nexport default App;\n","import './Login.css';\nimport Layout from './Layout';\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst Login = (props) => {\n  const [username, setUsername] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [redirect, setRedirect] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n        adminSite: false,\n      }),\n    };\n    fetch('https://serene-waters-04286.herokuapp.com/login', requestOptions)\n      .then((response) => response.json())\n      .then((results) => {\n        if (results.token !== undefined) {\n          window.localStorage.setItem('user', results.token);\n          props.authRefresh(true);\n          setRedirect(true);\n        } else {\n          setErrorMessage(results.message);\n        }\n      });\n  };\n\n  return (\n    <Layout>\n      {redirect && <Redirect to={'/'} push />}\n      <div className=\"mainContent\">\n        <form onSubmit={handleSubmit} className=\"login-form\">\n          <label htmlFor=\"username-field\">Username:</label>\n          <br />\n          <input\n            type=\"text\"\n            id=\"username-field\"\n            name=\"username\"\n            autoComplete=\"on\"\n            value={username ? username : ''}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n          <br />\n          <label htmlFor=\"password-field\">Password:</label>\n          <br />\n          <input\n            type=\"password\"\n            id=\"password-field\"\n            name=\"password\"\n            autoComplete=\"on\"\n            value={password ? password : ''}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <br />\n          <input type=\"submit\" value=\"Login\" />\n          {errorMessage && <div>{errorMessage}</div>}\n        </form>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst Logout = (props) => {\n  useEffect(() => {\n    window.localStorage.removeItem('user');\n    props.authRefresh(true);\n  });\n\n  return <Redirect to={'/'} />;\n};\n\nexport default Logout;\n","import './SignUp.css';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Layout from './Layout';\n\nconst SignUp = () => {\n  const [username, setUsername] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [confirmPassword, setConfirmPassword] = useState(null);\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (password === confirmPassword) {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          username: username,\n          email: email,\n          password: password,\n        }),\n      };\n      fetch(\n        'https://serene-waters-04286.herokuapp.com/signup',\n        requestOptions\n      ).then(() => history.push('/login'));\n    } else {\n    }\n  };\n\n  return (\n    <Layout>\n      <div className=\"mainContent\">\n        <form onSubmit={handleSubmit} className=\"Sign-up-form\">\n          <label htmlFor=\"username-field\">Username:</label>\n          <br />\n          <input\n            type=\"text\"\n            id=\"username-field\"\n            name=\"username\"\n            autoComplete=\"on\"\n            value={username ? username : ''}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n          <br />\n          <label htmlFor=\"email-field\">Email:</label>\n          <br />\n          <input\n            type=\"email\"\n            id=\"email-field\"\n            name=\"email\"\n            autoComplete=\"on\"\n            value={email ? email : ''}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          <br />\n          <label htmlFor=\"password-field\">Password:</label>\n          <br />\n          <input\n            type=\"password\"\n            id=\"password-field\"\n            name=\"password\"\n            autoComplete=\"on\"\n            value={password ? password : ''}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <br />\n          <label htmlFor=\"password-confirmation-field\">Confirm Password:</label>\n          <br />\n          <input\n            type=\"password\"\n            id=\"password-confirmation-field\"\n            name=\"password-confirmation\"\n            autoComplete=\"on\"\n            value={confirmPassword ? confirmPassword : ''}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n          />\n          <br />\n          <input type=\"submit\" value=\"Sign Up\" />\n          {password !== confirmPassword ? 'The passwords do not match' : ''}\n        </form>\n      </div>\n    </Layout>\n  );\n};\n\nexport default SignUp;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './CommentForm.css';\n\nconst CommentForm = (props) => {\n  const [body, setBody] = useState(null);\n  const { id } = useParams();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n      body: JSON.stringify({\n        author: props.userId,\n        body: body,\n      }),\n    };\n    await fetch(\n      'https://serene-waters-04286.herokuapp.com/posts/' + id + '/comments',\n      requestOptions\n    );\n    props.setComments();\n    setBody(null);\n    props.loadComments();\n  };\n\n  useEffect(() => {}, [props.comments]);\n\n  return (\n    <div className=\"form\">\n      {props.authState && (\n        <div className=\"commentForm\">\n          <h3>Submit a comment</h3>\n          <br />\n          <form onSubmit={handleSubmit}>\n            <label>Comment:</label>\n            <br />\n            <textarea\n              type=\"text\"\n              rows=\"5\"\n              name=\"body\"\n              value={body ? body : ''}\n              onChange={(e) => setBody(e.target.value)}\n              required\n            />\n            <br />\n            <input type=\"hidden\" value={id} name=\"post\" />\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","import React, { useEffect } from 'react';\nimport './Comments.css';\nconst { DateTime } = require('luxon');\n\nconst Comments = (props) => {\n  useEffect(() => {\n    const fetchComments = async () => {\n      const response = await fetch(\n        'https://serene-waters-04286.herokuapp.com/posts/' +\n          props.postid +\n          '/comments',\n        {\n          mode: 'cors',\n        }\n      );\n      const data = await response.json();\n\n      let array = [];\n      for (const comment of data.comments) {\n        const element = (\n          <div className=\"commentLayout\" key={comment._id}>\n            <h4 className=\"commentAuthor\">{comment.author.username}</h4>\n            <p className=\"commentTimestamp\">\n              {DateTime.fromISO(comment.timestamp).toLocaleString(\n                DateTime.DATETIME_MED\n              )}\n            </p>\n            <p className=\"commentBody\">{comment.body}</p>\n            <br />\n          </div>\n        );\n        array = [...array, element];\n      }\n      props.setComments(array);\n    };\n    fetchComments();\n  }, [props.loadComments]);\n  return <div className=\"Comment\">{props.comments}</div>;\n};\n\nexport default Comments;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './PostDetails.css';\nimport Layout from './Layout';\nimport CommentForm from './CommentForm';\nimport Comments from './Comments';\n\nconst PostDetails = (props) => {\n  const [postDetails, setPostDetails] = useState(null);\n  const { id } = useParams();\n  const [loadComments, setLoadComments] = useState(false);\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    const fetchPostDetails = async () => {\n      const response = await fetch(\n        'https://serene-waters-04286.herokuapp.com/posts/' + id,\n        {\n          mode: 'cors',\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('user'),\n          },\n        }\n      );\n      const data = await response.json();\n      const item = data.post;\n      setPostDetails(item);\n    };\n    fetchPostDetails();\n  }, []);\n\n  return (\n    <Layout authState={props.authState}>\n      <div className=\"postLayout\">\n        <div className=\"post\">\n          <h2>{postDetails ? postDetails.title : ''}</h2>\n          <br />\n          <p> {postDetails ? postDetails.body : ''}</p>\n        </div>\n        <CommentForm\n          authState={props.authState}\n          userId={props.userId}\n          loadComments={() => setLoadComments(!loadComments)}\n          setComments={() => setComments([])}\n          comments={comments}\n        />\n        <Comments\n          postid={id}\n          loadComments={loadComments}\n          setComments={(state) => setComments(state)}\n          comments={comments}\n        />\n      </div>\n    </Layout>\n  );\n};\n\nexport default PostDetails;\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport App from './App';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\nimport SignUp from './components/SignUp';\nimport PostDetails from './components/PostDetails';\n\nconst Routes = () => {\n  const [auth, setAuth] = useState(false);\n  const [username, setUsername] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [refresh, setRefresh] = useState(false);\n\n  const authChecker = () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + localStorage.getItem('user'),\n      },\n    };\n    if (localStorage.getItem('user')) {\n      fetch('https://serene-waters-04286.herokuapp.com/auth', requestOptions)\n        .then((response) => {\n          return response.json();\n        })\n        .then((results) => {\n          setAuth(results.response);\n          setUsername(results.username);\n          setUserId(results.userId);\n          setRefresh(false);\n        });\n    } else {\n      setAuth(false);\n      setUsername(null);\n      setUserId(null);\n      setRefresh(false);\n    }\n  };\n\n  useEffect(() => {\n    authChecker();\n  }, [refresh]);\n\n  return (\n    <HashRouter forceRefresh>\n      <Switch>\n        <Route exact path=\"/\" render={() => <App authState={auth} />} />\n        <Route\n          exact\n          path=\"/login\"\n          render={() => <Login authRefresh={(state) => setRefresh(state)} />}\n        />\n        <Route exact path=\"/signUp\" component={SignUp} />\n        <Route\n          exact\n          path=\"/logout\"\n          render={() => <Logout authRefresh={(state) => setRefresh(state)} />}\n        />\n        <Route\n          exact\n          path=\"/posts/:id\"\n          render={() => <PostDetails authState={auth} userId={userId} />}\n        />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}